[gd_scene load_steps=4 format=3 uid="uid://dk6dssf5ifs7d"]

[sub_resource type="CSharpScript" id="CSharpScript_8l0pe"]
script/source = "using Godot;
using System;

public partial class player : CharacterBody2D
{
	public const float Speed = 300.0f;
	public const float JumpVelocity = -400.0f;
	bool hasLanded;

	// Get the gravity from the project settings to be synced with RigidBody nodes.
	public float gravity = ProjectSettings.GetSetting(\"physics/2d/default_gravity\").AsSingle();

	public override void _PhysicsProcess(double delta)
	{
		Vector2 velocity = Velocity;

		// Add the gravity.
		if (!IsOnFloor()){
			velocity.Y += gravity * (float)delta;
			hasLanded = false;
		}

		if(IsOnFloor() && !hasLanded){
			//Play Sound
			hasLanded = true;
		}
		// Handle Jump.
		if (Input.IsActionJustPressed(\"ui_accept\") && IsOnFloor()){
			velocity.Y = JumpVelocity;
			//Play Sound
		}
		// Get the input direction and handle the movement/deceleration.
		// As good practice, you should replace UI actions with custom gameplay actions.
		Vector2 direction = Input.GetVector(\"left\", \"right\", \"up\", \"down\");
		if (direction != Vector2.Zero)
		{
			velocity.X = direction.X * Speed;
		}
		else
		{
			velocity.X = Mathf.MoveToward(Velocity.X, 0, Speed);
		}

		Velocity = velocity;
		MoveAndSlide();
	}
}
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_6e2g0"]

[sub_resource type="PlaceholderTexture2D" id="PlaceholderTexture2D_3gb7m"]

[node name="Player" type="CharacterBody2D"]
script = SubResource("CSharpScript_8l0pe")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_6e2g0")

[node name="Sprite2D" type="Sprite2D" parent="."]
scale = Vector2(20, 20)
texture = SubResource("PlaceholderTexture2D_3gb7m")
